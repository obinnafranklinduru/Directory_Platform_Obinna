components:
  schemas:
    AdminData:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        email:
          type: string
          format: email
        avatar:
          type: string
        isSuperAdmin:
          type: boolean
      example:
        id: 5ebac534954b54139806c112
        email: fake@example.com
        name: fake name
        avatar: https://lh3.googleusercontent.com/a/AAcHTtecH_6ZOOWXTALQXiC
        isSuperAdmin: false

    AdminDetails:
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            email:
              type: string
              format: email
            avatar:
              type: string
            isSuperAdmin:
              type: boolean
          example:
            id: 5ebac534954b54139806c112
            email: fake@example.com
            name: fake name
            avatar: https://lh3.googleusercontent.com/a/AAcHTtecH_6ZOOWXTALQXiC
            isSuperAdmin: false

    Category:
      type: object
      properties:
        name:
          type: string
      example:
        name: graphic designer

    Error:
      type: object
      properties:
        success:
          type: boolean
          default: false
        message:
          type: string

  responses:
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            message: Email already taken
            code: 400
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            message: Please authenticate
            code: 401
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            message: Forbidden
            code: 403
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            message: Not found
            code: 404

  securitySchemes:
    googleAuth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: "https://accounts.google.com/o/oauth2/v2/auth"
          scopes:
            "https://www.googleapis.com/auth/userinfo.profile": "View user profile"
            "https://www.googleapis.com/auth/userinfo.email": "View user email"
